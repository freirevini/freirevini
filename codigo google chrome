# input_table vem do KNIME
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans

df = input_table.copy()

# ---------- parâmetros baseados em estudos recentes ----------
# Fontes:
# - DataSenado 2024
# - Instituto Locomotiva 2024
# - Anbima/Datafolha 2025
# - Banco Central (via Pix) 2024
# - Fecomercio-SP 2024

# Regras definidas com base nas fontes acima:
MIN_ATIVO_APOSTAS      = 4      # ≥ 4 apostas/mês
MIN_ATIVO_VALOR        = 200.0  # > R$200/mês

MAX_ESPORADICO_APOSTAS = 1      # ≤ 1 aposta/mês
MAX_ESPORADICO_VALOR   = 100.0  # ≤ R$100/mês

MAX_LOW_QTD            = 3      # "poucas apostas" <= 3
MIN_HIGH_VALOR         = 500.0  # valor alto > R$500 (top 3%)

# ---------- função ajustada com classificação detalhada ----------
def classify(row, qtd_hi, val_hi, qtd_col, val_col):
    qtd = row[qtd_col]
    val = row[val_col]

    if qtd == 0 and val == 0:
        return "Não apostador"
    if qtd >= MIN_ATIVO_APOSTAS and val > MIN_ATIVO_VALOR:
        return "Apostador Ativo"
    if qtd <= MAX_ESPORADICO_APOSTAS and val <= MAX_ESPORADICO_VALOR:
        return "Apostador Esporádico"
    if qtd <= MAX_LOW_QTD and val > MIN_HIGH_VALOR:
        return "High-Stake Ocasional"
    return "Apostador Regular"

# ---------- classificação apostas e saques com nova regra ----------
df["Cluster_Aposta"] = df.apply(
    classify, axis=1,
    args=(None, None, "QtdTotalApostas", "VlrTotalApostas")
)
df["Cluster_Saque"] = df.apply(
    classify, axis=1,
    args=(None, None, "QtdTotalSaque", "VlrTotalSaque")
)

# ---------- KMeans clustering cruzado (mantido) ----------
features = df[["QtdTotalApostas","VlrTotalApostas",
               "QtdTotalSaque"  ,"VlrTotalSaque"  ]].copy()
scaled   = StandardScaler().fit_transform(features)
kmeans   = KMeans(n_clusters=4, random_state=42).fit(scaled)
df["KMeansCluster"] = kmeans.labels_

# ---------- retorno para KNIME ----------
output_table = df
